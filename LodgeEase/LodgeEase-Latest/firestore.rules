rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection - for all user types
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      allow create: if isAuthenticated() && (
        isAdmin() || 
        request.resource.data.userId == request.auth.uid
      );
      
      allow update: if isAuthenticated() && (
        isAdmin() || 
        (resource.data.userId == request.auth.uid && 
         request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['modificationRequested', 'modificationRequestedAt', 
                   'cancellationRequested', 'cancellationRequestedAt']))
      );
      
      allow delete: if isAdmin();
    }

    // Rooms collection
    match /rooms/{roomId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Reservations collection
    match /reservations/{reservationId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      allow delete: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
    }

    // Modification requests
    match /modificationRequests/{requestId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAdmin();
    }

    // Cancellation requests
    match /cancellationRequests/{requestId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAdmin();
    }
  }
}
